!function(n,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.ChatbotWidget=t():n.ChatbotWidget=t()}(this,()=>(()=>{"use strict";var n={56:(n,t,e)=>{n.exports=function(n){var t=e.nc;t&&n.setAttribute("nonce",t)}},72:n=>{var t=[];function e(n){for(var e=-1,o=0;o<t.length;o++)if(t[o].identifier===n){e=o;break}return e}function o(n,o){for(var s={},a=[],r=0;r<n.length;r++){var c=n[r],d=o.base?c[0]+o.base:c[0],h=s[d]||0,l="".concat(d," ").concat(h);s[d]=h+1;var p=e(l),g={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==p)t[p].references++,t[p].updater(g);else{var b=i(g,o);o.byIndex=r,t.splice(r,0,{identifier:l,updater:b,references:1})}a.push(l)}return a}function i(n,t){var e=t.domAPI(t);return e.update(n),function(t){if(t){if(t.css===n.css&&t.media===n.media&&t.sourceMap===n.sourceMap&&t.supports===n.supports&&t.layer===n.layer)return;e.update(n=t)}else e.remove()}}n.exports=function(n,i){var s=o(n=n||[],i=i||{});return function(n){n=n||[];for(var a=0;a<s.length;a++){var r=e(s[a]);t[r].references--}for(var c=o(n,i),d=0;d<s.length;d++){var h=e(s[d]);0===t[h].references&&(t[h].updater(),t.splice(h,1))}s=c}}},113:n=>{n.exports=function(n,t){if(t.styleSheet)t.styleSheet.cssText=n;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(n))}}},314:n=>{n.exports=function(n){var t=[];return t.toString=function(){return this.map(function(t){var e="",o=void 0!==t[5];return t[4]&&(e+="@supports (".concat(t[4],") {")),t[2]&&(e+="@media ".concat(t[2]," {")),o&&(e+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),e+=n(t),o&&(e+="}"),t[2]&&(e+="}"),t[4]&&(e+="}"),e}).join("")},t.i=function(n,e,o,i,s){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(o)for(var r=0;r<this.length;r++){var c=this[r][0];null!=c&&(a[c]=!0)}for(var d=0;d<n.length;d++){var h=[].concat(n[d]);o&&a[h[0]]||(void 0!==s&&(void 0===h[5]||(h[1]="@layer".concat(h[5].length>0?" ".concat(h[5]):""," {").concat(h[1],"}")),h[5]=s),e&&(h[2]?(h[1]="@media ".concat(h[2]," {").concat(h[1],"}"),h[2]=e):h[2]=e),i&&(h[4]?(h[1]="@supports (".concat(h[4],") {").concat(h[1],"}"),h[4]=i):h[4]="".concat(i)),t.push(h))}},t}},540:n=>{n.exports=function(n){var t=document.createElement("style");return n.setAttributes(t,n.attributes),n.insert(t,n.options),t}},601:n=>{n.exports=function(n){return n[1]}},659:n=>{var t={};n.exports=function(n,e){var o=function(n){if(void 0===t[n]){var e=document.querySelector(n);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(n){e=null}t[n]=e}return t[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(e)}},715:(n,t,e)=>{e.d(t,{A:()=>r});var o=e(601),i=e.n(o),s=e(314),a=e.n(s)()(i());a.push([n.id,"/* Chatbot Widget Styles */\n.chatbot-widget {\n  position: fixed;\n  z-index: 10000;\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', sans-serif;\n  font-size: 14px;\n  line-height: 1.5;\n}\n\n/* Widget positioning */\n.chatbot-widget.bottom-right {\n  bottom: 20px;\n  right: 20px;\n}\n\n.chatbot-widget.bottom-left {\n  bottom: 20px;\n  left: 20px;\n}\n\n.chatbot-widget.top-right {\n  top: 20px;\n  right: 20px;\n}\n\n.chatbot-widget.top-left {\n  top: 20px;\n  left: 20px;\n}\n\n/* Chat bubble button */\n.chatbot-bubble {\n  width: 60px;\n  height: 60px;\n  border-radius: 50%;\n  background: #3B82F6;\n  color: white;\n  border: none;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n  transition: all 0.3s ease;\n  position: relative;\n  overflow: hidden;\n}\n\n.chatbot-bubble:hover {\n  transform: scale(1.05);\n  box-shadow: 0 6px 20px rgba(0, 0, 0, 0.2);\n}\n\n.chatbot-bubble:active {\n  transform: scale(0.95);\n}\n\n.chatbot-bubble svg {\n  width: 24px;\n  height: 24px;\n  transition: transform 0.3s ease;\n}\n\n.chatbot-bubble.open svg {\n  transform: rotate(180deg);\n}\n\n/* Notification badge */\n.chatbot-badge {\n  position: absolute;\n  top: -5px;\n  right: -5px;\n  background: #EF4444;\n  color: white;\n  border-radius: 50%;\n  width: 20px;\n  height: 20px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 12px;\n  font-weight: bold;\n  animation: pulse 2s infinite;\n}\n\n@keyframes pulse {\n  0% {\n    transform: scale(1);\n  }\n  50% {\n    transform: scale(1.1);\n  }\n  100% {\n    transform: scale(1);\n  }\n}\n\n/* Chat window */\n.chatbot-window {\n  position: absolute;\n  bottom: 80px;\n  right: 0;\n  width: 350px;\n  height: 500px;\n  background: white;\n  border-radius: 12px;\n  box-shadow: 0 10px 40px rgba(0, 0, 0, 0.1);\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n  transform: scale(0.8) translateY(20px);\n  opacity: 0;\n  transition: all 0.3s ease;\n  pointer-events: none;\n}\n\n/* Chat window positioning for left positions */\n.chatbot-widget.bottom-left .chatbot-window,\n.chatbot-widget.top-left .chatbot-window {\n  right: auto;\n  left: 0;\n}\n\n/* Chat window positioning for top positions */\n.chatbot-widget.top-right .chatbot-window,\n.chatbot-widget.top-left .chatbot-window {\n  bottom: auto;\n  top: 80px;\n}\n\n.chatbot-window.open {\n  transform: scale(1) translateY(0);\n  opacity: 1;\n  pointer-events: all;\n}\n\n/* Responsive adjustments */\n@media (max-width: 480px) {\n  .chatbot-window {\n    width: calc(100vw - 40px);\n    height: calc(100vh - 120px);\n    bottom: 80px;\n    right: 20px;\n    left: 20px;\n  }\n  \n  .chatbot-widget.bottom-left .chatbot-window,\n  .chatbot-widget.top-left .chatbot-window {\n    left: 0;\n    right: 20px;\n  }\n}\n\n/* Chat header */\n.chatbot-header {\n  background: #3B82F6;\n  color: white;\n  padding: 16px 20px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n\n.chatbot-header h3 {\n  margin: 0;\n  font-size: 16px;\n  font-weight: 600;\n}\n\n.chatbot-close {\n  background: none;\n  border: none;\n  color: white;\n  cursor: pointer;\n  padding: 4px;\n  border-radius: 4px;\n  transition: background-color 0.2s;\n}\n\n.chatbot-close:hover {\n  background: rgba(255, 255, 255, 0.1);\n}\n\n.chatbot-close svg {\n  width: 16px;\n  height: 16px;\n}\n\n/* Chat messages */\n.chatbot-messages {\n  flex: 1;\n  overflow-y: auto;\n  padding: 20px;\n  background: #F9FAFB;\n}\n\n.chatbot-message {\n  margin-bottom: 16px;\n  display: flex;\n  align-items: flex-start;\n}\n\n.chatbot-message.user {\n  justify-content: flex-end;\n}\n\n.chatbot-message.bot,\n.chatbot-message.assistant {\n  justify-content: flex-start;\n}\n\n.chatbot-message-content {\n  max-width: 80%;\n  padding: 12px 16px;\n  border-radius: 18px;\n  word-wrap: break-word;\n}\n\n.chatbot-message.user .chatbot-message-content {\n  background: #3B82F6;\n  color: white;\n  border-bottom-right-radius: 4px;\n}\n\n.chatbot-message.bot .chatbot-message-content,\n.chatbot-message.assistant .chatbot-message-content {\n  background: white;\n  color: #374151;\n  border-bottom-left-radius: 4px;\n  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);\n}\n\n.chatbot-message-time {\n  font-size: 11px;\n  color: #9CA3AF;\n  margin-top: 4px;\n  text-align: center;\n}\n\n/* Typing indicator */\n.chatbot-typing {\n  display: flex;\n  align-items: center;\n  padding: 12px 16px;\n  background: white;\n  border-radius: 18px;\n  border-bottom-left-radius: 4px;\n  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);\n  max-width: 80%;\n}\n\n.chatbot-typing-dots {\n  display: flex;\n  gap: 4px;\n}\n\n.chatbot-typing-dot {\n  width: 6px;\n  height: 6px;\n  background: #9CA3AF;\n  border-radius: 50%;\n  animation: typing 1.4s infinite;\n}\n\n.chatbot-typing-dot:nth-child(2) {\n  animation-delay: 0.2s;\n}\n\n.chatbot-typing-dot:nth-child(3) {\n  animation-delay: 0.4s;\n}\n\n@keyframes typing {\n  0%, 60%, 100% {\n    transform: translateY(0);\n    opacity: 0.4;\n  }\n  30% {\n    transform: translateY(-10px);\n    opacity: 1;\n  }\n}\n\n/* Chat input */\n.chatbot-input-container {\n  padding: 16px 20px;\n  background: white;\n  border-top: 1px solid #E5E7EB;\n}\n\n.chatbot-input-wrapper {\n  display: flex;\n  align-items: center;\n  background: #F3F4F6;\n  border-radius: 24px;\n  padding: 8px 12px;\n  transition: all 0.2s;\n}\n\n.chatbot-input-wrapper:focus-within {\n  background: #E5E7EB;\n  box-shadow: 0 0 0 2px rgba(59, 130, 246, 0.1);\n}\n\n.chatbot-input {\n  flex: 1;\n  border: none;\n  background: none;\n  outline: none;\n  padding: 8px 12px;\n  font-size: 14px;\n  color: #374151;\n  resize: none;\n  max-height: 100px;\n  min-height: 20px;\n}\n\n.chatbot-input::placeholder {\n  color: #9CA3AF;\n}\n\n.chatbot-send {\n  background: #3B82F6;\n  border: none;\n  border-radius: 50%;\n  width: 32px;\n  height: 32px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  transition: all 0.2s;\n  margin-left: 8px;\n}\n\n.chatbot-send:hover {\n  background: #2563EB;\n  transform: scale(1.05);\n}\n\n.chatbot-send:disabled {\n  background: #D1D5DB;\n  cursor: not-allowed;\n  transform: none;\n}\n\n.chatbot-send svg {\n  width: 16px;\n  height: 16px;\n  color: white;\n}\n\n/* Welcome message */\n.chatbot-welcome {\n  text-align: center;\n  padding: 20px;\n  color: #6B7280;\n}\n\n.chatbot-welcome h4 {\n  margin: 0 0 8px 0;\n  color: #374151;\n  font-size: 16px;\n}\n\n.chatbot-welcome p {\n  margin: 0;\n  font-size: 14px;\n}\n\n/* Error states */\n.chatbot-error {\n  background: #FEF2F2;\n  color: #DC2626;\n  padding: 12px 16px;\n  border-radius: 8px;\n  margin: 16px 20px;\n  font-size: 13px;\n  text-align: center;\n}\n\n/* Loading states */\n.chatbot-loading {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 40px;\n  color: #6B7280;\n}\n\n.chatbot-spinner {\n  width: 20px;\n  height: 20px;\n  border: 2px solid #E5E7EB;\n  border-top: 2px solid #3B82F6;\n  border-radius: 50%;\n  animation: spin 1s linear infinite;\n  margin-right: 8px;\n}\n\n@keyframes spin {\n  0% { transform: rotate(0deg); }\n  100% { transform: rotate(360deg); }\n}\n\n/* Scrollbar styling */\n.chatbot-messages::-webkit-scrollbar {\n  width: 6px;\n}\n\n.chatbot-messages::-webkit-scrollbar-track {\n  background: #F3F4F6;\n}\n\n.chatbot-messages::-webkit-scrollbar-thumb {\n  background: #D1D5DB;\n  border-radius: 3px;\n}\n\n.chatbot-messages::-webkit-scrollbar-thumb:hover {\n  background: #9CA3AF;\n}\n\n/* Animation classes */\n.chatbot-fade-in {\n  animation: fadeIn 0.3s ease;\n}\n\n.chatbot-slide-up {\n  animation: slideUp 0.3s ease;\n}\n\n@keyframes fadeIn {\n  from {\n    opacity: 0;\n  }\n  to {\n    opacity: 1;\n  }\n}\n\n@keyframes slideUp {\n  from {\n    transform: translateY(20px);\n    opacity: 0;\n  }\n  to {\n    transform: translateY(0);\n    opacity: 1;\n  }\n}",""]);const r=a},825:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var t=n.insertStyleElement(n);return{update:function(e){!function(n,t,e){var o="";e.supports&&(o+="@supports (".concat(e.supports,") {")),e.media&&(o+="@media ".concat(e.media," {"));var i=void 0!==e.layer;i&&(o+="@layer".concat(e.layer.length>0?" ".concat(e.layer):""," {")),o+=e.css,i&&(o+="}"),e.media&&(o+="}"),e.supports&&(o+="}");var s=e.sourceMap;s&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(s))))," */")),t.styleTagTransform(o,n,t.options)}(t,n,e)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(t)}}}}},t={};function e(o){var i=t[o];if(void 0!==i)return i.exports;var s=t[o]={id:o,exports:{}};return n[o](s,s.exports,e),s.exports}e.n=n=>{var t=n&&n.__esModule?()=>n.default:()=>n;return e.d(t,{a:t}),t},e.d=(n,t)=>{for(var o in t)e.o(t,o)&&!e.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:t[o]})},e.o=(n,t)=>Object.prototype.hasOwnProperty.call(n,t),e.r=n=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},e.nc=void 0;var o={};e.r(o),e.d(o,{ChatbotWidget:()=>x,default:()=>y});var i=e(72),s=e.n(i),a=e(825),r=e.n(a),c=e(659),d=e.n(c),h=e(56),l=e.n(h),p=e(540),g=e.n(p),b=e(113),u=e.n(b),m=e(715),f={};f.styleTagTransform=u(),f.setAttributes=l(),f.insert=d().bind(null,"head"),f.domAPI=r(),f.insertStyleElement=g(),s()(m.A,f),m.A&&m.A.locals&&m.A.locals;class x{constructor(n){this.isOpen=!1,this.messages=[],this.isTyping=!1,this.config={apiUrl:"http://localhost:5173/api",primaryColor:"#3B82F6",position:"bottom-right",welcomeMessage:"Hello! How can I help you today?",placeholder:"Type your message...",title:"AI Assistant",...n},this.sessionId=this.generateSessionId(),this.initializeWidget()}async initializeWidget(){try{await this.fetchConfig(),this.init()}catch(n){console.warn("Failed to fetch widget config, using default configuration:",n),this.init()}}async fetchConfig(){if(!this.config.widgetId||!this.config.clientId)throw new Error("widgetId and clientId are required");const n=await fetch(`${this.config.apiUrl}/widget/${this.config.widgetId}?clientId=${this.config.clientId}`);if(!n.ok)throw new Error(`Failed to fetch config: ${n.status}`);const t=await n.json();if(!t.success||!t.config)throw new Error(t.error||"Invalid response format");this.config={...this.config,...t.config}}generateSessionId(){return"undefined"!=typeof crypto&&crypto.randomUUID?crypto.randomUUID():"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(n){const t=16*Math.random()|0;return("x"===n?t:3&t|8).toString(16)})}init(){this.createWidget(),this.attachEventListeners(),this.applyCustomStyles()}createWidget(){this.container=document.createElement("div"),this.container.className=`chatbot-widget ${this.config.position}`,this.bubble=document.createElement("button"),this.bubble.className="chatbot-bubble",this.bubble.innerHTML='\n      <svg viewBox="0 0 24 24" fill="currentColor">\n        <path d="M20 2H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h4l4 4 4-4h4c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-2 12H6v-2h12v2zm0-3H6V9h12v2zm0-3H6V6h12v2z"/>\n      </svg>\n    ',this.window=document.createElement("div"),this.window.className="chatbot-window",this.window.innerHTML=`\n      <div class="chatbot-header">\n        <h3>${this.config.title}</h3>\n        <button class="chatbot-close">\n          <svg viewBox="0 0 24 24" fill="currentColor">\n            <path d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"/>\n          </svg>\n        </button>\n      </div>\n      <div class="chatbot-messages"></div>\n      <div class="chatbot-input-container">\n        <div class="chatbot-input-wrapper">\n          <textarea class="chatbot-input" placeholder="${this.config.placeholder}" rows="1"></textarea>\n          <button class="chatbot-send">\n            <svg viewBox="0 0 24 24" fill="currentColor">\n              <path d="M2.01 21L23 12 2.01 3 2 10l15 2-15 2z"/>\n            </svg>\n          </button>\n        </div>\n      </div>\n    `,this.messagesContainer=this.window.querySelector(".chatbot-messages"),this.input=this.window.querySelector(".chatbot-input"),this.sendButton=this.window.querySelector(".chatbot-send"),this.container.appendChild(this.bubble),this.container.appendChild(this.window),document.body.appendChild(this.container),this.showWelcomeMessage()}attachEventListeners(){this.bubble.addEventListener("click",()=>{this.toggleWindow()}),this.window.querySelector(".chatbot-close").addEventListener("click",()=>{this.closeWindow()}),this.sendButton.addEventListener("click",()=>{this.sendMessage()}),this.input.addEventListener("keydown",n=>{"Enter"!==n.key||n.shiftKey||(n.preventDefault(),this.sendMessage())}),this.input.addEventListener("input",()=>{this.autoResizeInput()}),document.addEventListener("click",n=>{this.isOpen&&!this.container.contains(n.target)&&this.closeWindow()})}applyCustomStyles(){if(this.config.primaryColor){const n=document.createElement("style");n.textContent=`\n        .chatbot-bubble {\n          background: ${this.config.primaryColor} !important;\n        }\n        .chatbot-header {\n          background: ${this.config.primaryColor} !important;\n        }\n        .chatbot-message.user .chatbot-message-content {\n          background: ${this.config.primaryColor} !important;\n        }\n        .chatbot-send {\n          background: ${this.config.primaryColor} !important;\n        }\n        .chatbot-send:hover {\n          background: ${this.adjustColor(this.config.primaryColor,-20)} !important;\n        }\n      `,document.head.appendChild(n)}}adjustColor(n,t){const e="#"===n[0],o=e?n.slice(1):n,i=parseInt(o,16);let s=(i>>16)+t,a=(i>>8&255)+t,r=(255&i)+t;return s=s>255?255:s<0?0:s,a=a>255?255:a<0?0:a,r=r>255?255:r<0?0:r,(e?"#":"")+(s<<16|a<<8|r).toString(16).padStart(6,"0")}toggleWindow(){this.isOpen?this.closeWindow():this.openWindow()}openWindow(){this.isOpen=!0,this.window.classList.add("open"),this.bubble.classList.add("open"),this.input.focus(),this.scrollToBottom()}closeWindow(){this.isOpen=!1,this.window.classList.remove("open"),this.bubble.classList.remove("open")}showWelcomeMessage(){if(this.config.welcomeMessage){const n=document.createElement("div");n.className="chatbot-welcome",n.innerHTML=`\n        <h4>Welcome!</h4>\n        <p>${this.config.welcomeMessage}</p>\n      `,this.messagesContainer.appendChild(n)}}async sendMessage(){const n=this.input.value.trim();if(n&&!this.isTyping){this.addMessage({id:this.generateMessageId(),content:n,role:"user",timestamp:new Date}),this.input.value="",this.autoResizeInput(),this.showTypingIndicator();try{await this.callStreamChatAPI(n)}catch(n){console.error("Chat API error:",n),this.hideTypingIndicator(),this.showError("Sorry, I encountered an error. Please try again.")}}}async callStreamChatAPI(n){const t=await fetch(`${this.config.apiUrl}/chat`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({message:n,sessionId:this.sessionId,widgetId:this.config.widgetId,clientId:this.config.clientId,stream:!0})});if(!t.ok)throw new Error(`HTTP error! status: ${t.status}`);this.hideTypingIndicator();const e=this.generateMessageId(),o=document.createElement("div");o.className="chatbot-message assistant chatbot-fade-in",o.innerHTML='\n      <div class="chatbot-message-content">\n        <span class="streaming-content"></span>\n      </div>\n    ',this.messagesContainer.appendChild(o),this.scrollToBottom();const i=o.querySelector(".streaming-content");let s="";const a=t.body?.getReader(),r=new TextDecoder;if(a)try{for(;;){const{done:n,value:t}=await a.read();if(n)break;const e=r.decode(t,{stream:!0});if(e.startsWith("SESSION_ID:")){const n=e.match(/SESSION_ID:([^\n]+)/);if(n){this.sessionId=n[1],console.log("Received sessionId:",this.sessionId);continue}}s+=e,i.innerHTML=this.formatMessage(s),this.scrollToBottom()}this.messages.push({id:e,content:s,role:"assistant",timestamp:new Date})}catch(n){console.error("Stream reading error:",n),this.showError("Error reading response stream.")}}async callChatAPI(n){const t=await fetch(`${this.config.apiUrl}/chat`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({message:n,sessionId:this.sessionId,widgetId:this.config.widgetId,clientId:this.config.clientId,stream:!1})});if(!t.ok)throw new Error(`HTTP error! status: ${t.status}`);return await t.json()}addMessage(n){this.messages.push(n);const t=document.createElement("div");t.className=`chatbot-message ${n.role} chatbot-fade-in`,t.innerHTML=`\n      <div class="chatbot-message-content">\n        ${this.formatMessage(n.content)}\n      </div>\n    `,this.messagesContainer.appendChild(t),this.scrollToBottom()}formatMessage(n){return n.replace(/\*\*(.*?)\*\*/g,"<strong>$1</strong>").replace(/\*(.*?)\*/g,"<em>$1</em>").replace(/\n/g,"<br>")}showTypingIndicator(){this.isTyping=!0,this.sendButton.setAttribute("disabled","true");const n=document.createElement("div");n.className="chatbot-message bot",n.innerHTML='\n      <div class="chatbot-typing">\n        <div class="chatbot-typing-dots">\n          <div class="chatbot-typing-dot"></div>\n          <div class="chatbot-typing-dot"></div>\n          <div class="chatbot-typing-dot"></div>\n        </div>\n      </div>\n    ',n.id="typing-indicator",this.messagesContainer.appendChild(n),this.scrollToBottom()}hideTypingIndicator(){this.isTyping=!1,this.sendButton.removeAttribute("disabled");const n=document.getElementById("typing-indicator");n&&n.remove()}showError(n){const t=document.createElement("div");t.className="chatbot-error",t.textContent=n,this.messagesContainer.appendChild(t),this.scrollToBottom()}autoResizeInput(){this.input.style.height="auto",this.input.style.height=Math.min(this.input.scrollHeight,100)+"px"}scrollToBottom(){setTimeout(()=>{this.messagesContainer.scrollTop=this.messagesContainer.scrollHeight},100)}generateMessageId(){return"msg_"+Math.random().toString(36).substr(2,9)}destroy(){this.container&&this.container.parentNode&&this.container.parentNode.removeChild(this.container)}open(){this.openWindow()}close(){this.closeWindow()}sendProgrammaticMessage(n){this.addMessage({id:this.generateMessageId(),content:n,role:"assistant",timestamp:new Date})}}function w(){const n=window.chatbotConfig;n&&n.widgetId&&n.clientId?new x(n):console.warn("Chatbot widget: Missing required configuration (widgetId, clientId)")}"loading"===document.readyState?document.addEventListener("DOMContentLoaded",w):w();const y=x;return window.ChatbotWidget=x,o})());